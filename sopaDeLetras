#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <time.h>
#include <unistd.h>


struct pals{
    int largo;
    char escribe[10];
    char direcion; // h, v, d, D
};

int main() {
    int size = 18;
    int tabla[size][size];
    int nPalabras = -1;

    FILE *fptr;

    if(access("palabras.txt", F_OK) != 0) {

        fptr = fopen("palabras.txt", "w");

        fprintf(fptr, "%s", "qUESo\n");
        fprintf(fptr, "%s", "eSNUPi\n");
        fprintf(fptr, "%s", "pELICULAs\n");
        fprintf(fptr, "%s", "aSTRONAUTa\n");
        fprintf(fptr, "%s", "cALZOn\n");
        fprintf(fptr, "%s", "hIGo\n");

        fclose(fptr);
    }

    fptr = fopen("palabras.txt", "r");

    //cuenta cuantas palabras hay
    char c;
    for (c = getc(fptr); c != EOF; c = getc(fptr)) {
        if (c == '\n') {
            nPalabras = nPalabras + 1;
        }
    }
    fclose(fptr);

    printf("%d\n",nPalabras);

    struct pals palabras[nPalabras];

    int foo, large = 0;
    char bar[10];

    c = '\0';
    fptr = fopen("palabras.txt", "r");

    for (c = getc(fptr); c != EOF; c = getc(fptr)) {
        if (c == '\n') {
            printf(" %s ", bar);
            palabras[foo].largo = large;
            large = 0;
            strcpy(palabras[foo].escribe, bar);
            memset(bar, '\0', 10);
        } else {
            bar[large] = c;
            large += 1;
            printf("%d", large);
        }
    }
}
    // pon las palabras en la sopa
    // void put();

//void draw() {
//    int num = 0;
//    int i = 0;
//    char l;

//    srand(time(NULL));
//    for (i; i < 10; i++) {
//        num = rand() % 25 + 65;
//        l = num;
//        printf("%c ", l);
//        l = num+32;
//        printf("%c\n", l);
//    }
//}
